---

- name: ca root dir
  ansible.builtin.file:
    path: "{{ ca_root_dir }}"
    state: directory

- name: ca root 'private' dir
  ansible.builtin.file:
    path: "{{ ca_root_dir }}/private"
    state: directory

- name: CA Root Private Key
  community.crypto.openssl_privatekey:
    path: "{{ ca_root_dir }}/private/root-ca.key.pem"
    passphrase: "{{ ca_root_cert_passphrase }}"
    cipher: aes256
  register: ca_root_key

- name: CA Root Cert (see if exists)
  stat:
    path: "{{ ca_root_cert_file }}"
  register: ca_root_cert_stat

- name: CA Root CSR
  block:

    - name: CA Root CSR
      community.crypto.openssl_csr:
        path: "{{ ca_root_dir }}/root-ca.csr"
        common_name: "my-root-ca"
        privatekey_path: "{{ ca_root_key.filename }}"
        privatekey_passphrase: "{{ ca_root_cert_passphrase }}"
      register: ca_root_csr

    - name: CA Root sign CSR
      community.crypto.x509_certificate:
        path: "{{ ca_root_cert_file }}"
        csr_path: "{{ ca_root_csr.filename }}"
        provider: selfsigned
        privatekey_path: "{{ ca_root_key.filename }}"
        privatekey_passphrase: "{{ ca_root_cert_passphrase }}"
      register: ca_root_crt

  when: not ca_root_cert_stat.stat.exists

  always:
     - name: Clean up CA Root CSR
       file:
         path: "{{ ca_root_dir }}/root-ca.csr"
         state: absent

- name: CA Root Cert Info
  community.crypto.x509_certificate_info:
    path: "{{ ca_root_cert_file }}"
  register: ca_root_cert_info

- name: CA Root Cert Info Debug
  ansible.builtin.debug:
    var: ca_root_cert_info
    verbosity: 1

- name: CA Root Cert Info Debug
  ansible.builtin.debug:
    var: "{{ item }}"
  with_items:
    - ca_root_cert_info.issuer
    - ca_root_cert_info.subject

- name: CA Root sign CRL
  community.crypto.x509_crl:
    path: "{{ ca_root_dir }}/root-ca.crl"
    privatekey_path: "{{ ca_root_key.filename }}"
    privatekey_passphrase: "{{ ca_root_cert_passphrase }}"
    issuer:
      CN: My CA
    last_update: "+0s"
    next_update: "+7d"
    revoked_certificates: []
